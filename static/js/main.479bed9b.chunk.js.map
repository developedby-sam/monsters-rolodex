{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","id","name","email","className","src","alt","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAW,IAAD,EACFA,EAAMC,QAA1BC,EADsB,EACtBA,GAAIC,EADkB,EAClBA,KAAMC,EADY,EACZA,MAElB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAG,+BAA0BJ,EAA1B,0BACHK,IAAI,YAEL,6BAAKJ,IACL,4BAAIC,QCVMI,EAAW,SAACR,GACxB,IAAMS,EAAWT,EAAMS,SACvB,OACC,qBAAKJ,UAAU,YAAf,SACEI,EAASC,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLVS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCR,UAAU,SACVS,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCGG,G,wDArCd,aAAe,IAAD,8BACb,gBAcDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IALD,E,qDASd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC7B,GAAD,OACxCA,EAAQE,KAAK4B,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAK1B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCO,YAAY,kBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCNI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.479bed9b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../card/card.styles.css\";\n\nexport const Card = (props) => {\n\tconst { id, name, email } = props.monster;\n\n\treturn (\n\t\t<div className=\"card-container\">\n\t\t\t<img\n\t\t\t\tsrc={`https://robohash.org/${id}?set=set2&size=180x180`}\n\t\t\t\talt=\"monster\"\n\t\t\t/>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Card } from \"../card/card.component.jsx\";\n\nexport const CardList = (props) => {\n\tconst monsters = props.monsters;\n\treturn (\n\t\t<div className=\"card-list\">\n\t\t\t{monsters.map((monster) => (\n\t\t\t\t<Card key={monster.id} monster={monster} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\t<input\n\t\tclassName=\"search\"\n\t\ttype=\"search\"\n\t\tplaceholder={placeholder}\n\t\tonChange={handleChange}\n\t/>\n);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// importing components\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\nimport \"./components/card-list/card-list.styles.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"search monsters\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}